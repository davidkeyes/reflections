How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Using the diff command pulled out the small fragments of code with differences.
This is an easier way to spot changes, compared to looking through code blocks.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Being able to review a file's history would certainly save me the trouble of
recreating old work.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved,
like Google docs does?

By manually choosing a when to commit, the user can choose when commits are
made and ensure that there is logic behind the timing. This also opens up
the doors for user error, specifically not committing soon enough and losing
changes. A problem like that could be resolve with automatic saving.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file
separately?

A system like Git is used frequently with code, which can often have
dependencies across multiple files. In such a case, tracking those files
together is necessary to ensure that not dependencies are broken in the course
of making changes.

How can you use the commands git log and git diff to view the history of files?

Git log shows the commits that have been made to a repository. Using git log
with the additional command --stat will show the number of insertions and
deletions for each commit.
Git diff shows the differences between two commits.

How might using version control make you more confident to make changes that
could break something?

With version control, it is very easy to revert back to the working version.
This removes any concern for making significant changes, provided they
are being committed in a logical, piecewise manner.

Now that you have your workspace set up, what do you want to try using Git for?

I want to use git for tracking the changes made in scripts that I use for
conducting data analysis in RStudio. As I move on to additional programming
languages, I believe Git will be valuable for maintaining code as I am
learning.
